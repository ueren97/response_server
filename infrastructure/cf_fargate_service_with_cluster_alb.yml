---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# FIXME add to cfn-modules
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Fargate: service that runs on a Fargate cluster based on fargate/cluster.yaml and uses the cluster ALB, a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack
      - ParentClusterStack
      - ParentAlertStack
      - ParentZoneStack
      - ParentClientStack1
      - ParentClientStack2
      - ParentClientStack3
    - Label:
        default: 'Load Balancer Parameters'
      Parameters:
      - LoadBalancerPriority
      - LoadBalancerHostPattern
      - LoadBalancerPathPattern
      - LoadBalancerHttps
      - LoadBalancerDeregistrationDelay
    - Label:
        default: 'Task Parameters'
      Parameters:
      - TaskPolicies
      - AppImage
      - AppCommand
      - AppPort
      - AppEnvironment1Key
      - AppEnvironment1Value
      - AppEnvironment2Key
      - AppEnvironment2Value
      - AppEnvironment3Key
      - AppEnvironment3Value
      - AppEnvironment4Key
      - AppEnvironment4Value
      - AppEnvironment5Key
      - AppEnvironment5Value
      - AppEnvironment6Key
      - AppEnvironment6Value
      - AppEnvironment7Key
      - AppEnvironment7Value
      - AppEnvironment8Key
      - AppEnvironment8Value
      - AppEnvironment9Key
      - AppEnvironment9Value
      - AppEnvironment10Key
      - AppEnvironment10Value
      - AppEnvironment11Key
      - AppEnvironment11Value
      - AppEnvironment12Key
      - AppEnvironment12Value
      - AppEnvironment13Key
      - AppEnvironment13Value
      - AppEnvironment14Key
      - AppEnvironment14Value
      - AppEnvironment15Key
      - AppEnvironment15Value
      - AppEnvironment16Key
      - AppEnvironment16Value
    - Label:
        default: 'Service Parameters'
      Parameters:
      - SubDomainNameWithDot
      - Cpu
      - Memory
      - SubnetsReach
      - AutoScaling
      - DesiredCount
      - MaxCapacity
      - MinCapacity
      - HealthCheckGracePeriod
      - LogsRetentionInDays
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  ParentClusterStack:
    Description: 'Stack name of parent Cluster stack based on fargate/cluster.yaml template.'
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
    Type: String
    Default: ''
  ParentZoneStack:
    Description: 'Optional stack name of parent zone stack based on vpc/zone-*.yaml template.'
    Type: String
    Default: ''
  ParentClientStack1:
    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  ParentClientStack2:
    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  ParentClientStack3:
    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  LoadBalancerPriority:
    Description: 'The priority for the rule. Elastic Load Balancing evaluates rules in priority order, from the lowest value to the highest value. If a request satisfies a rule, Elastic Load Balancing ignores all subsequent rules. A target group can have only one rule with a given priority.'
    Type: Number
    Default: 1
    ConstraintDescription: 'Must be in the range [1-99999]'
    MinValue: 1
    MaxValue: 99999
  LoadBalancerHostPattern:
    Description: 'Optional host pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'
    Type: String
    Default: ''
    ConstraintDescription: 'Must not be longer than 255'
    MaxLength: 255
  LoadBalancerPathPattern:
    Description: 'Optional path pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'
    Type: String
    Default: '/*'
    ConstraintDescription: 'Must not be longer than 255'
    MaxLength: 255
  LoadBalancerHttps:
    Description: 'If the cluster supports HTTPS (LoadBalancerCertificateArn is set) you can enable HTTPS for the service'
    Type: String
    Default: false
    AllowedValues:
    - true
    - false
  LoadBalancerDeregistrationDelay:
    Description: 'The amount time (in seconds) to wait before changing the state of a deregistering target from draining to unused.'
    Type: Number
    Default: 60
    ConstraintDescription: 'Must be in the range [0-3600]'
    MinValue: 0
    MaxValue: 3600
  TaskPolicies:
    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task IAM role'
    Type: String
    Default: ''
  AppImage:
    Description: 'The Docker image to use for the app container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: 'widdix/hello:v1'
  AppCommand:
    Description: 'Optional commands (comma-delimited) used when starting the app container.'
    Type: String
    Default: ''
  AppPort:
    Description: 'The port exposed by the app container that receives traffic from the load balancer.'
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 49150
  AppEnvironment1Key:
    Description: 'Optional environment variable 1 key for app container.'
    Type: String
    Default: ''
  AppEnvironment1Value:
    Description: 'Optional environment variable 1 value for app container.'
    Type: String
    Default: ''
  AppEnvironment2Key:
    Description: 'Optional environment variable 2 key for app container.'
    Type: String
    Default: ''
  AppEnvironment2Value:
    Description: 'Optional environment variable 2 value for app container.'
    Type: String
    Default: ''
  AppEnvironment3Key:
    Description: 'Optional environment variable 3 key for app container.'
    Type: String
    Default: ''
  AppEnvironment3Value:
    Description: 'Optional environment variable 3 value for app container.'
    Type: String
    Default: ''
  AppEnvironment4Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment4Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment5Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment5Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment6Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment6Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment7Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment7Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment8Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment8Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment9Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment9Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment10Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment10Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment11Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment11Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment12Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment12Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment13Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment13Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment14Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment14Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment15Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment15Value:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment16Key:
    Description: ''
    Type: String
    Default: ''
  AppEnvironment16Value:
    Description: ''
    Type: String
    Default: ''
  SubDomainNameWithDot:
    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ยง{SubDomainNameWithDot}ยง{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'
    Type: String
    Default: ''
  Cpu:
    Description: 'The minimum number of vCPUs to reserve for the container.'
    Type: String
    Default: '0.25'
    AllowedValues: ['0.25', '0,5', '1', '2', '4']
  Memory:
    Description: 'The amount (in GB) of memory used by the task.'
    Type: String
    Default: '0.5'
    AllowedValues: ['0.5', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']
  DesiredCount:
    Description: 'The number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 2
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  MaxCapacity:
    Description: 'The maximum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 4
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  MinCapacity:
    Description: 'The minimum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 2
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  SubnetsReach:
    Description: 'Should the service have direct access to the Internet or do you prefer private subnets with NAT?'
    Type: String
    Default: Public
    AllowedValues:
    - Public
    - Private
  AutoScaling:
    Description: 'Scale number of tasks based on CPU load?'
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
  HealthCheckGracePeriod:
    Description: 'The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.'
    Type: Number
    Default: 60
    MinValue: 0
    MaxValue: 1800
Mappings:
  CpuMap:
    '0.25':
      Cpu: 256
    '0.5':
      Cpu: 512
    '1':
      Cpu: 1024
    '2':
      Cpu: 2048
    '4':
      Cpu: 4096
  MemoryMap:
    '0.5':
      Memory: 512
    '1':
      Memory: 1024
    '2':
      Memory: 2048
    '3':
      Memory: 3072
    '4':
      Memory: 4096
    '5':
      Memory: 5120
    '6':
      Memory: 6144
    '7':
      Memory: 7168
    '8':
      Memory: 8192
    '9':
      Memory: 9216
    '10':
      Memory: 10240
    '11':
      Memory: 11264
    '12':
      Memory: 12288
    '13':
      Memory: 13312
    '14':
      Memory: 14336
    '15':
      Memory: 15360
    '16':
      Memory: 16384
    '17':
      Memory: 17408
    '18':
      Memory: 18432
    '19':
      Memory: 19456
    '20':
      Memory: 20480
    '21':
      Memory: 21504
    '22':
      Memory: 22528
    '23':
      Memory: 23552
    '24':
      Memory: 24576
    '25':
      Memory: 25600
    '26':
      Memory: 26624
    '27':
      Memory: 27648
    '28':
      Memory: 28672
    '29':
      Memory: 29696
    '30':
      Memory: 30720
Conditions:
  HasLoadBalancerHttps: !Equals [!Ref LoadBalancerHttps, 'true']
  HasLoadBalancerPathPattern: !Not [!Equals [!Ref LoadBalancerPathPattern, '']]
  HasLoadBalancerHostPattern: !Not [!Equals [!Ref LoadBalancerHostPattern, '']]
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
  HasZone: !Not [!Equals [!Ref ParentZoneStack, '']]
  HasSubnetsReachPublic: !Equals [!Ref SubnetsReach, Public]
  HasAutoScaling: !Equals [!Ref AutoScaling, 'true']
  HasClientSecurityGroup1: !Not [!Equals [!Ref ParentClientStack1, '']]
  HasClientSecurityGroup2: !Not [!Equals [!Ref ParentClientStack2, '']]
  HasClientSecurityGroup3: !Not [!Equals [!Ref ParentClientStack3, '']]
  HasTaskPolicies: !Not [!Equals [!Ref TaskPolicies, '']]
  HasAppCommand: !Not [!Equals [!Ref AppCommand, '']]
  HasAppEnvironment1Key: !Not [!Equals [!Ref AppEnvironment1Key, '']]
  HasAppEnvironment2Key: !Not [!Equals [!Ref AppEnvironment2Key, '']]
  HasAppEnvironment3Key: !Not [!Equals [!Ref AppEnvironment3Key, '']]
  HasAppEnvironment4Key: !Not [!Equals [!Ref AppEnvironment4Key, '']]
  HasAppEnvironment5Key: !Not [!Equals [!Ref AppEnvironment5Key, '']]
  HasAppEnvironment6Key: !Not [!Equals [!Ref AppEnvironment6Key, '']]
  HasAppEnvironment7Key: !Not [!Equals [!Ref AppEnvironment7Key, '']]
  HasAppEnvironment8Key: !Not [!Equals [!Ref AppEnvironment8Key, '']]
  HasAppEnvironment9Key: !Not [!Equals [!Ref AppEnvironment9Key, '']]
  HasAppEnvironment10Key: !Not [!Equals [!Ref AppEnvironment10Key, '']]
  HasAppEnvironment11Key: !Not [!Equals [!Ref AppEnvironment11Key, '']]
  HasAppEnvironment12Key: !Not [!Equals [!Ref AppEnvironment12Key, '']]
  HasAppEnvironment13Key: !Not [!Equals [!Ref AppEnvironment13Key, '']]
  HasAppEnvironment14Key: !Not [!Equals [!Ref AppEnvironment14Key, '']]
  HasAppEnvironment15Key: !Not [!Equals [!Ref AppEnvironment15Key, '']]
  HasAppEnvironment16Key: !Not [!Equals [!Ref AppEnvironment16Key, '']]
Resources:
  RecordSet:
    Condition: HasZone
    Type: 'AWS::Route53::RecordSet'
    Properties:
      AliasTarget:
        HostedZoneId: {'Fn::ImportValue': !Sub '${ParentClusterStack}-CanonicalHostedZoneID'}
        DNSName: {'Fn::ImportValue': !Sub '${ParentClusterStack}-DNSName'}
      HostedZoneId: {'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId'}
      Name: !Sub
      - '${SubDomainNameWithDot}${HostedZoneName}'
      - SubDomainNameWithDot: !Ref SubDomainNameWithDot
        HostedZoneName: {'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'}
      Type: A
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: '/'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200-299'
      Port: 8080 # overriden when containers are attached
      Protocol: HTTP
      TargetType: ip
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: !Ref LoadBalancerDeregistrationDelay
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
  HTTPCodeTarget5XXTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application load balancer receives 5XX HTTP status codes from targets'
      Namespace: 'AWS/ApplicationELB'
      MetricName: HTTPCode_Target_5XX_Count
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: LoadBalancer
        Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'}
      - Name: TargetGroup
        Value: !GetAtt TargetGroup.TargetGroupFullName
  TargetConnectionErrorCountTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application load balancer could not connect to targets'
      Namespace: 'AWS/ApplicationELB'
      MetricName: TargetConnectionErrorCount
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: LoadBalancer
        Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'}
      - Name: TargetGroup
        Value: !GetAtt TargetGroup.TargetGroupFullName
  LoadBalancerListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup
      Conditions: !If
      - HasLoadBalancerPathPattern
      - !If
        - HasLoadBalancerHostPattern
        - - Field: host-header
            Values:
            - !Ref LoadBalancerHostPattern
          - Field: path-pattern
            Values:
            - !Sub '${LoadBalancerPathPattern}'
        - - Field: path-pattern
            Values:
            - !Sub '${LoadBalancerPathPattern}'
      - !If
        - HasLoadBalancerHostPattern
        - - Field: host-header
            Values:
            - !Ref LoadBalancerHostPattern
        - [] # neither LoadBalancerHostPattern nor LoadBalancerPathPattern specified
      ListenerArn: !If [HasLoadBalancerHttps, {'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpsListener'}, {'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpListener'}]
      Priority: !Ref LoadBalancerPriority
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 'ecr:GetAuthorizationToken'
            - 'ecr:BatchCheckLayerAvailability'
            - 'ecr:GetDownloadUrlForLayer'
            - 'ecr:BatchGetImage'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: !GetAtt 'LogGroup.Arn'
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If [HasTaskPolicies, !Split [',', !Ref TaskPolicies], !Ref 'AWS::NoValue']
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
      - Name: app
        Image: !Ref AppImage
        Command: !If [HasAppCommand, !Split [',', !Ref AppCommand], !Ref 'AWS::NoValue']
        PortMappings:
        - ContainerPort: !Ref AppPort
          Protocol: tcp
        Essential: true
        LogConfiguration:
          LogDriver: awslogs
          Options:
            'awslogs-region': !Ref 'AWS::Region'
            'awslogs-group': !Ref LogGroup
            'awslogs-stream-prefix': app
        Environment:
        - !If [HasAppEnvironment1Key, {Name: !Ref AppEnvironment1Key, Value: !Ref AppEnvironment1Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment2Key, {Name: !Ref AppEnvironment2Key, Value: !Ref AppEnvironment2Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment3Key, {Name: !Ref AppEnvironment3Key, Value: !Ref AppEnvironment3Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment4Key, {Name: !Ref AppEnvironment4Key, Value: !Ref AppEnvironment4Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment5Key, {Name: !Ref AppEnvironment5Key, Value: !Ref AppEnvironment5Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment6Key, {Name: !Ref AppEnvironment6Key, Value: !Ref AppEnvironment6Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment7Key, {Name: !Ref AppEnvironment7Key, Value: !Ref AppEnvironment7Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment8Key, {Name: !Ref AppEnvironment8Key, Value: !Ref AppEnvironment8Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment9Key, {Name: !Ref AppEnvironment9Key, Value: !Ref AppEnvironment9Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment10Key, {Name: !Ref AppEnvironment10Key, Value: !Ref AppEnvironment10Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment11Key, {Name: !Ref AppEnvironment11Key, Value: !Ref AppEnvironment11Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment12Key, {Name: !Ref AppEnvironment12Key, Value: !Ref AppEnvironment12Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment13Key, {Name: !Ref AppEnvironment13Key, Value: !Ref AppEnvironment13Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment14Key, {Name: !Ref AppEnvironment14Key, Value: !Ref AppEnvironment14Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment15Key, {Name: !Ref AppEnvironment15Key, Value: !Ref AppEnvironment15Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment16Key, {Name: !Ref AppEnvironment16Key, Value: !Ref AppEnvironment16Value}, !Ref 'AWS::NoValue']
      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]
      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'
      Family: !Ref 'AWS::StackName'
      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  ServiceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName}-service'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
      SecurityGroupIngress:
      - SourceSecurityGroupId: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerSecurityGroup'}
        FromPort: !Ref AppPort
        ToPort: !Ref AppPort
        IpProtocol: tcp
  Service:
    DependsOn: LoadBalancerListenerRule
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriod
      LaunchType: FARGATE
      LoadBalancers:
      - ContainerName: app
        ContainerPort: !Ref AppPort
        TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !If [HasSubnetsReachPublic, ENABLED, DISABLED]
          SecurityGroups:
          - !Ref ServiceSecurityGroup
          - !If [HasClientSecurityGroup1, {'Fn::ImportValue': !Sub '${ParentClientStack1}-ClientSecurityGroup'}, !Ref 'AWS::NoValue']
          - !If [HasClientSecurityGroup2, {'Fn::ImportValue': !Sub '${ParentClientStack2}-ClientSecurityGroup'}, !Ref 'AWS::NoValue']
          - !If [HasClientSecurityGroup3, {'Fn::ImportValue': !Sub '${ParentClientStack3}-ClientSecurityGroup'}, !Ref 'AWS::NoValue']
          Subnets: !Split [',', {'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnets${SubnetsReach}'}]
      TaskDefinition: !Ref TaskDefinition
  CPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  ScalableTargetRole: # based on http://docs.aws.amazon.com/AmazonECS/latest/developerguide/autoscale_IAM_role.html
    Condition: HasAutoScaling
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'application-autoscaling.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: AmazonEC2ContainerServiceAutoscaleRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ecs:DescribeServices'
            - 'ecs:UpdateService'
            Resource: '*'
      - PolicyName: cloudwatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'cloudwatch:DescribeAlarms'
            Resource: '*'
  ScalableTarget:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      ResourceId: !Sub
      - 'service/${Cluster}/${Service}'
      - Cluster: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        Service: !GetAtt 'Service.Name'
      RoleARN: !GetAtt 'ScalableTargetRole.Arn'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
  ScaleUpPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-up'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
        - MetricIntervalLowerBound: 0
          ScalingAdjustment: 25
  ScaleDownPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-down'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
        - MetricIntervalUpperBound: 0
          ScalingAdjustment: -25
  CPUUtilizationHighAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is running out of CPU'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 60
      AlarmActions:
      - !Ref ScaleUpPolicy
  CPUUtilizationLowAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is wasting CPU'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: LessThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 30
      AlarmActions:
      - !Ref ScaleDownPolicy
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'fargate/service-cluster-alb'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '9.6.0'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
